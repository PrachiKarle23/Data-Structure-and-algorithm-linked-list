class Solution {
public:
    ListNode* reverse(ListNode* l1){
      ListNode* prev=NULL;
      ListNode* curr=l1;
      while(curr!=NULL)
      {
          ListNode* forward=curr->next;
          curr->next=prev;
          prev=curr;
          curr=forward;
      }
      return prev;
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(l1==NULL){
            return l2;
        }
        if(l2==NULL){
            return l1;
        }
        ListNode* t1=reverse(l1);
        ListNode* t2=reverse(l2);

        ListNode* res=new ListNode(-1);
        ListNode* ans=res;
        int carry=0;
        while(t1!=NULL || t2!=NULL){
            int a=(t1==NULL)?0:t1->val;
            int b=(t2==NULL)?0:t2->val;

            int s=(a+b+carry)%10;
            ans->next=new ListNode(s);
            carry=(a+b+carry)/10;
            ans=ans->next;

            if(t1){
                t1=t1->next;
            }
            if(t2){
                t2=t2->next;
            }
            
        }
        while(carry){
            ans->next=new ListNode(carry%10);
            ans=ans->next;
            carry=carry/10;
        }
        return reverse(res->next);
    }
};
