class Solution
{
    public:
    //Function to remove duplicates from unsorted linked list.
    Node * removeDuplicates( Node *head) 
    {
        Node* temp=head;
        while(temp!=NULL)
        {
            Node* prev=temp;
            Node* temp1=temp->next;
            while(temp1!=NULL)
            {
                if(temp->data==temp1->data)
                {
                    prev->next=temp1->next;
                    temp1=temp1->next;
                    continue;
                }
                prev=temp1;
                temp1=temp1->next;
            }
            temp=temp->next;
        }
        return head;
      
    }
};

class Solution
{
    public:
    //Function to remove duplicates from unsorted linked list.
    Node * removeDuplicates( Node *head) 
    {
       unordered_set<int>seen;
       
       Node* curr=head;
       Node* prev=NULL;
       
       while(curr!=NULL)
       {
           if(seen.find(curr->data)!=seen.end())
           {
               prev->next=curr->next;
               delete(curr);
           }
           else{
               seen.insert(curr->data);
               prev=curr;
           }
           curr=prev->next;
       }
       return head;
    }
};
