//geeks for geek
class Solution{
  public:
    //Function to merge K sorted linked list.
    Node * mergeKLists(Node *arr[], int K)
    {
        vector<int>ans;
        for(int i=0;i<K;i++)
        {
            Node* temp=*(arr+i);
            while(temp!=NULL)
            {
                ans.push_back(temp->data);
                temp=temp->next;
            }
        }
        
        sort(ans.begin(),ans.end());
        Node* newnode=new Node(-1);
        Node* temp=newnode;
        for(int i=0;i<ans.size();i++)
        {
            temp->next=new Node(ans[i]);
            temp=temp->next;
        }
        return newnode->next;
    }
};

//Leetcode
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        vector<int>ans;
        for(int i=0;i<lists.size();i++)
        {
            ListNode* temp=lists[i];
            while(temp!=NULL)
            {
                ans.push_back(temp->val);
                temp=temp->next;
            }
        }
        sort(ans.begin(),ans.end());
        ListNode* newnode=new ListNode(-1);
        ListNode* temp1=newnode;
        for(int i=0;i<ans.size();i++)
        {
            temp1->next=new ListNode(ans[i]);
            temp1=temp1->next;
        }
        return newnode->next;
    }
};
