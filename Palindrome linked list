class Solution {
public:
    bool isPalindrome(ListNode* head) {
        vector<int>ans;
        ListNode* temp=head;
        while(temp!=NULL){
            ans.push_back(temp->val);
            temp=temp->next;
        }

        int s=0,e=ans.size()-1;
        while(s<=e){
           if(ans[s]!=ans[e]){
            return false;
           }
           s++;
           e--;
        }
        return true;
    }
};


class Solution {
public:
    bool check(string &a)
    {
       int s=0,e=a.length()-1;
       while(s<=e)
       {
          if(a[s]!=a[e]){
            return false;
          }
          s++;
          e--;
       }
       return true;
    }
    bool isPalindrome(ListNode* head) {
        string a="";
        ListNode* t=head;
        while(t!=NULL)
        {
            a+=to_string(t->val);
            t=t->next;
        }
        // string p=a;
        // reverse(p.begin(),p.end());
        // return p==a;
        return check(a);
    }
};
