ListNode* partition(ListNode* head, int x) {
        ListNode* less=new ListNode(-1);
        ListNode* great=new ListNode(-1);

         ListNode* temp1=less;
         ListNode* temp2=great;

        ListNode* temp=head;
        while(temp!=NULL){
           if(temp->val<x){
            temp1->next=temp;
            temp1=temp1->next;
           }
           else{
            temp2->next=temp;
            temp2=temp2->next;
           }
           temp=temp->next;
        }
         temp1->next=great->next;
         temp2->next=NULL;
         
         return less->next;
    }



class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        ListNode* temp=head;

        ListNode* ans=new ListNode(-1);
        ListNode* t=ans;
        while(temp!=NULL)
        {
           if(temp->val<x)
           {
            t->next=new ListNode(temp->val);
            t=t->next;
           }
           temp=temp->next;
        }

        temp=head;
        while(temp!=NULL)
        {
            if(temp->val>=x){
                t->next=new ListNode(temp->val);
                t=t->next;
            }
            temp=temp->next;
        }

        return ans->next;
    }
};
